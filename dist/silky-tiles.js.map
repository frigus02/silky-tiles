{"version":3,"file":"silky-tiles.js","sources":["../src/helpers/listenable.js","../src/helpers/utils.js","../src/helpers/drag-handler.js","../src/layouts/base-layout.js","../src/layouts/column-layout.js","../src/layouts/flow-layout.js","../src/adapters/base-adapter.js","../src/adapters/flow-adapter.js","../src/index.js"],"sourcesContent":["export default function Listenable(supportedEvents) {\n    this._listeners = {};\n\n    for (let eventName of supportedEvents) {\n        this._listeners[eventName] = [];\n    }\n}\n\nListenable.prototype.addEventListener = function addEventListener(eventName, callback) {\n    this._listeners[eventName].push(callback);\n};\n\nListenable.prototype.dispatchEvent = function dispatchEvent(eventName, ...args) {\n    for (let listener of this._listeners[eventName]) {\n        listener(...args);\n    }\n};\n\nListenable.prototype.removeEventListener = function removeEventListener(eventName, callback) {\n    const index = this._listeners[eventName].indexOf(callback);\n    if (index > -1) {\n        this._listeners[eventName].splice(index, 1);\n    }\n};\n","function copyProperties(target, source) {\n    for (let key of Reflect.ownKeys(source)) {\n        if (key !== 'constructor' && key !== 'prototype' && key !== 'name') {\n            let desc = Object.getOwnPropertyDescriptor(source, key);\n            Object.defineProperty(target, key, desc);\n        }\n    }\n}\n\nexport function getTouchCoordinate(evt, prop) {\n    if (evt.touches && evt.touches.length > 0) {\n        return evt.touches[0][prop];\n    } else {\n        return evt[prop];\n    }\n}\n\nexport function mix(target, ...mixins) {\n    for (let mixin of mixins) {\n        copyProperties(target, mixin);\n        copyProperties(target.prototype, mixin.prototype);\n    }\n}\n","import Listenable from './listenable';\nimport {getTouchCoordinate, mix} from './utils';\n\nexport default class DragHandler {\n    constructor (silkyTiles) {\n        Listenable.call(this, ['dragstart', 'dragend']);\n\n        this._silkyTiles = silkyTiles;\n        this._adapter = null;\n        this._tile = null;\n        this._startX = 0;\n        this._startY = 0;\n        this._currentX = 0;\n        this._currentY = 0;\n\n        this._initEventListeners = this._initEventListeners.bind(this);\n        this._destroyEventListeners = this._destroyEventListeners.bind(this);\n        this._onDragStart = this._onDragStart.bind(this);\n        this._onDragMove = this._onDragMove.bind(this);\n        this._onDragEnd = this._onDragEnd.bind(this);\n    }\n\n    get adapter () {\n        return this._adapter;\n    }\n\n    set adapter (adapter) {\n        if (this._adapter) {\n            this._adapter.removeEventListener('tileadded', this._initEventListeners);\n            this._adapter.tiles.forEach(this._destroyEventListeners);\n        }\n\n        this._adapter = adapter;\n        this._adapter.tiles.forEach(this._initEventListeners);\n        this._adapter.addEventListener('tileadded', this._initEventListeners);\n    }\n\n    _initEventListeners (tile) {\n        if (window.PointerEvent) {\n            tile.addEventListener('pointerdown', this._onDragStart);\n        } else {\n            tile.addEventListener('touchstart', this._onDragStart);\n            tile.addEventListener('mousedown', this._onDragStart);\n        }\n    }\n\n    _destroyEventListeners (tile) {\n        if (window.PointerEvent) {\n            tile.removeEventListener('pointerdown', this._onDragStart);\n        } else {\n            tile.removeEventListener('touchstart', this._onDragStart);\n            tile.removeEventListener('mousedown', this._onDragStart);\n        }\n    }\n\n    _onDragStart (evt) {\n        if (this._tile) return;\n\n        evt.preventDefault();\n\n        this._tile = evt.currentTarget;\n\n        const currentPosition = this._silkyTiles.getTilePosition(this._tile);\n\n        this._currentX = getTouchCoordinate(evt, 'pageX');\n        this._currentY = getTouchCoordinate(evt, 'pageY');\n        this._startX = this._currentX - currentPosition.x;\n        this._startY = this._currentY - currentPosition.y;\n\n        this._tile.classList.add('st-is-dragging');\n\n        if (window.PointerEvent) {\n            this._tile.addEventListener('pointermove', this._onDragMove);\n            this._tile.addEventListener('pointerup', this._onDragEnd);\n            this._tile.addEventListener('pointercancel', this._onDragEnd);\n\n            this._tile.setPointerCapture(evt.pointerId);\n        } else {\n            document.addEventListener('touchmove', this._onDragMove);\n            document.addEventListener('touchend', this._onDragEnd);\n            document.addEventListener('mousemove', this._onDragMove);\n            document.addEventListener('mouseup', this._onDragEnd);\n        }\n\n        this.dispatchEvent('dragstart', this._tile);\n    }\n\n    _onDragMove (evt) {\n        if (!this._tile) return;\n\n        this._currentX = getTouchCoordinate(evt, 'pageX');\n        this._currentY = getTouchCoordinate(evt, 'pageY');\n    }\n\n    _onDragEnd () {\n        if (!this._tile) return;\n\n        if (window.PointerEvent) {\n            this._tile.removeEventListener('pointermove', this._onDragMove);\n            this._tile.removeEventListener('pointerup', this._onDragEnd);\n            this._tile.removeEventListener('pointercancel', this._onDragEnd);\n        } else {\n            document.removeEventListener('touchmove', this._onDragMove);\n            document.removeEventListener('touchend', this._onDragEnd);\n            document.removeEventListener('mousemove', this._onDragMove);\n            document.removeEventListener('mouseup', this._onDragEnd);\n        }\n\n        this._tile.classList.remove('st-is-dragging');\n\n        this.dispatchEvent('dragend', this._tile);\n\n        this._tile = null;\n    }\n\n    _getTileAtPosition (x, y) {\n        for (let tile of this._adapter.tiles) {\n            const position = this._silkyTiles.getTilePosition(tile);\n\n            if (tile !== this._tile &&\n                x > position.x && x < position.x + position.width &&\n                y > position.y && y < position.y + position.height) {\n                return tile;\n            }\n        }\n    }\n\n    layout () {\n        if (!this._tile) return;\n\n        const containerBounds = this._adapter.getContainerBounds();\n        const targetTile = this._getTileAtPosition(\n            this._currentX - containerBounds.absoluteLeft,\n            this._currentY - containerBounds.absoluteTop);\n\n        if (targetTile) {\n            this._adapter.onTileMoved(this._tile, targetTile);\n        }\n\n        return {\n            x: this._currentX - this._startX,\n            y: this._currentY - this._startY\n        };\n    }\n}\n\nmix(DragHandler, Listenable);\n","export default class BaseLayout {\n    constructor () {\n        this._positions = new WeakMap();\n    }\n\n    get height () {\n    }\n\n    getTilePosition (tile) {\n        return this._positions.get(tile);\n    }\n\n    layout () {\n    }\n\n    onTileAdded (/*tile*/) {\n    }\n\n    onTileChanged (/*tile*/) {\n    }\n\n    onTileRemoved (/*tile*/) {\n    }\n\n    onWidthChanged (/*width*/) {\n    }\n\n    setTilePosition (tile, position) {\n        this._positions.set(tile, position);\n    }\n}\n","import BaseLayout from './base-layout';\n\nexport default class ColumnLayout extends BaseLayout {\n    constructor (options) {\n        super();\n\n        this._options = {\n            columns: 5,\n            margin: 8,\n            outerMargin: true\n        };\n        Object.assign(this._options, options);\n\n        this._tiles = [];\n        this._queue = [];\n        this._tileWidth = 1;\n        this._height = 0;\n    }\n\n    get height () {\n        return this._height;\n    }\n\n    layout (layoutParamsGetter) {\n        const queue = this._queue;\n        this._queue = [];\n\n        queue.forEach(tile => {\n            const layoutParams = layoutParamsGetter(tile);\n            const row = Math.floor(layoutParams.position / this._options.columns);\n            const col = layoutParams.position - row * this._options.columns;\n            let translateX = col * (this._tileWidth + this._options.margin);\n            let translateY = row * (this._tileWidth + this._options.margin);\n            if (this._options.outerMargin) {\n                translateX += this._options.margin;\n                translateY += this._options.margin;\n            }\n\n            this._height = Math.max(this._height, (row + 1) * (this._tileWidth + this._options.margin) + (this._options.outerMargin ? this._options.margin : -this._options.margin));\n\n            this.setTilePosition(tile, {\n                x: translateX,\n                y: translateY,\n                width: this._tileWidth,\n                height: this._tileWidth\n            });\n        });\n\n        return queue;\n    }\n\n    onTileAdded (tile) {\n        this._tiles.push(tile);\n        this._queue.push(tile);\n    }\n\n    onTileChanged (tile) {\n        this._queue.push(tile);\n    }\n\n    onTileRemoved (tile) {\n        const index = this._tiles.indexOf(tile);\n        if (index > -1) {\n            this._tiles.splice(index, 1);\n            this._queue.push(...this._tiles);\n        }\n    }\n\n    onWidthChanged (width) {\n        this._queue.push(...this._tiles);\n\n        if (this._options.outerMargin) {\n            this._tileWidth = (width - (this._options.columns + 1) * this._options.margin) / this._options.columns;\n        } else {\n            this._tileWidth = (width - (this._options.columns - 1) * this._options.margin) / this._options.columns;\n        }\n\n        this._height = 0;\n    }\n}\n","import BaseLayout from './base-layout';\n\nexport default class FlowLayout extends BaseLayout {\n    constructor (options) {\n        super();\n\n        this._options = {\n            tileWidth: 96,\n            tileHeight: 96,\n            margin: 8,\n            outerMargin: true\n        };\n        Object.assign(this._options, options);\n\n        this._tiles = [];\n        this._queue = [];\n        this._tilesInRow = 1;\n        this._height = 0;\n    }\n\n    get height () {\n        return this._height;\n    }\n\n    layout (layoutParamsGetter) {\n        const queue = this._queue;\n        this._queue = [];\n\n        queue.forEach(tile => {\n            const layoutParams = layoutParamsGetter(tile);\n            const row = Math.floor(layoutParams.position / this._tilesInRow);\n            const col = layoutParams.position - row * this._tilesInRow;\n            let translateX = col * (this._options.tileWidth + this._options.margin);\n            let translateY = row * (this._options.tileHeight + this._options.margin);\n            if (this._options.outerMargin) {\n                translateX += this._options.margin;\n                translateY += this._options.margin;\n            }\n\n            this._height = Math.max(this._height, (row + 1) * (this._options.tileHeight + this._options.margin) + (this._options.outerMargin ? this._options.margin : -this._options.margin));\n\n            this.setTilePosition(tile, {\n                x: translateX,\n                y: translateY,\n                width: this._options.tileWidth,\n                height: this._options.tileHeight\n            });\n        });\n\n        return queue;\n    }\n\n    onTileAdded (tile) {\n        this._tiles.push(tile);\n        this._queue.push(tile);\n    }\n\n    onTileChanged (tile) {\n        this._queue.push(tile);\n    }\n\n    onTileRemoved (tile) {\n        const index = this._tiles.indexOf(tile);\n        if (index > -1) {\n            this._tiles.splice(index, 1);\n            this._queue.push(...this._tiles);\n        }\n    }\n\n    onWidthChanged (width) {\n        this._queue.push(...this._tiles);\n\n        if (this._options.outerMargin) {\n            this._tilesInRow = Math.floor((width - this._options.margin) / (this._options.tileWidth + this._options.margin));\n        } else {\n            this._tilesInRow = Math.floor((width + this._options.margin) / (this._options.tileWidth + this._options.margin));\n        }\n\n        if (this._tilesInRow < 1) {\n            this._tilesInRow = 1;\n        }\n\n        this._height = 0;\n    }\n}\n","import Listenable from '../helpers/listenable';\nimport {mix} from '../helpers/utils';\n\nexport default class BaseAdapter {\n    constructor (containerElement) {\n        Listenable.call(this, ['tileadded', 'tilechanged', 'tileremoved']);\n\n        this._containerElement = containerElement;\n        this._tiles = Array.from(containerElement.children);\n\n        this._onChildrenMutated = this._onChildrenMutated.bind(this);\n\n        this._observer = new MutationObserver(this._onChildrenMutated);\n        this._observer.observe(containerElement, {\n            childList: true\n        });\n    }\n\n    _onChildrenMutated (records) {\n        for (let record of records) {\n            for (let node of record.addedNodes) {\n                if (node instanceof Element) {\n                    this._tiles.push(node);\n                    this.dispatchEvent('tileadded', node);\n                }\n            }\n\n            for (let node of record.removedNodes) {\n                if (node instanceof Element) {\n                    const index = this._tiles.indexOf(node);\n                    this._tiles.splice(index, 1);\n                    this.dispatchEvent('tileremoved', node);\n                }\n            }\n        }\n    }\n\n    get container () {\n        return this._containerElement;\n    }\n\n    get tiles () {\n        return this._tiles;\n    }\n\n    getContainerBounds () {\n        const bounds = this._containerElement.getBoundingClientRect();\n\n        let absoluteTop = 0;\n        let absoluteLeft = 0;\n        let currentElement = this._containerElement;\n        do {\n            absoluteTop += currentElement.offsetTop;\n            absoluteLeft += currentElement.offsetLeft;\n            currentElement = currentElement.offsetParent;\n        } while (currentElement);\n\n        return {\n            top: bounds.top,\n            left: bounds.left,\n            absoluteTop,\n            absoluteLeft\n        };\n    }\n\n    getTileBounds (tile) {\n        const containerBounds = this.getContainerBounds();\n        const bounds = tile.getBoundingClientRect();\n\n        return {\n            width: bounds.width,\n            height: bounds.width,\n            x: bounds.left - containerBounds.left,\n            y: bounds.top - containerBounds.top\n        };\n    }\n\n    getTileLayoutParams (/*tile*/) {\n    }\n\n    onTileMoved (/*tile, targetTile*/) {\n    }\n}\n\nmix(BaseAdapter, Listenable);\n","import BaseAdapter from './base-adapter';\n\nexport default class FlowAdapter extends BaseAdapter {\n    constructor (containerElement, moveMode) {\n        super(containerElement);\n\n        this._moveMode = moveMode;\n    }\n\n    getTileLayoutParams (tile) {\n        return {\n            position: this._tiles.indexOf(tile)\n        };\n    }\n\n    onTileMoved (tile, targetTile) {\n        const index = this._tiles.indexOf(tile);\n        const targetIndex = this._tiles.indexOf(targetTile);\n\n        if (this._moveMode === 'switch') {\n            this._tiles[index] = targetTile;\n            this._tiles[targetIndex] = tile;\n\n            this.dispatchEvent('tilechanged', tile);\n            this.dispatchEvent('tilechanged', targetTile);\n        } else {\n            this._tiles.splice(index, 1);\n            this._tiles.splice(targetIndex, 0, tile);\n\n            const from = Math.min(index, targetIndex);\n            const to = Math.max(index, targetIndex);\n            for (let i = from; i <= to; i++) {\n                this.dispatchEvent('tilechanged', this._tiles[i]);\n            }\n        }\n    }\n}\n","import './styles/minimal.css';\nimport DragHandler from './helpers/drag-handler';\nimport ColumnLayout from './layouts/column-layout';\nimport FlowLayout from './layouts/flow-layout';\nimport BaseAdapter from './adapters/base-adapter';\nimport FlowAdapter from './adapters/flow-adapter';\n\nexport class SilkyTiles {\n    constructor () {\n        this._adapter = null;\n        this._layout = null;\n        this._layoutWidth = 0;\n        this._layoutHeight = 0;\n        this._dragHandler = new DragHandler(this);\n        this._draggingTile = null;\n\n        this._onTileAdded = this._onTileAdded.bind(this);\n        this._onTileChanged = this._onTileChanged.bind(this);\n        this._onTileRemoved = this._onTileRemoved.bind(this);\n        this._onTileDragStart = this._onTileDragStart.bind(this);\n        this._onTileDragEnd = this._onTileDragEnd.bind(this);\n        this._update = this._update.bind(this);\n\n        this._dragHandler.addEventListener('dragstart', this._onTileDragStart);\n        this._dragHandler.addEventListener('dragend', this._onTileDragEnd);\n\n        requestAnimationFrame(this._update);\n    }\n\n    get adapter () {\n        return this._adapter;\n    }\n\n    set adapter (adapter) {\n        if (this._adapter) {\n            this._adapter.removeEventListener('tileadded', this._onTileAdded);\n            this._adapter.removeEventListener('tilechanged', this._onTileChanged);\n            this._adapter.removeEventListener('tileremoved', this._onTileRemoved);\n            this._adapter.tiles.forEach(this._onTileRemoved);\n        }\n\n        this._adapter = adapter;\n        this._adapter.tiles.forEach(this._onTileAdded);\n        this._adapter.addEventListener('tileadded', this._onTileAdded);\n        this._adapter.addEventListener('tilechanged', this._onTileChanged);\n        this._adapter.addEventListener('tileremoved', this._onTileRemoved);\n\n        this._dragHandler.adapter = this._adapter;\n    }\n\n    get layout () {\n        return this._layout;\n    }\n\n    set layout (layout) {\n        if (this._layout && this._adapter) {\n            this._adapter.tiles.forEach(this._onTileRemoved);\n        }\n\n        this._layout = layout;\n        if (this._adapter) {\n            this._adapter.tiles.forEach(this._onTileAdded);\n        }\n    }\n\n    _onTileAdded (tile) {\n        if (this._layout) {\n            this._layout.onTileAdded(tile);\n        }\n    }\n\n    _onTileChanged (tile) {\n        if (this._layout) {\n            this._layout.onTileChanged(tile);\n        }\n    }\n\n    _onTileRemoved (tile) {\n        if (this._layout) {\n            this._layout.onTileRemoved(tile);\n        }\n    }\n\n    _onTileDragStart (tile) {\n        this._draggingTile = tile;\n    }\n\n    _onTileDragEnd (tile) {\n        this._draggingTile = null;\n        this._onTileChanged(tile);\n    }\n\n    _update () {\n        if (!this._adapter || !this._layout) return;\n\n        // Get layout from drag handler first, because it might add\n        // additional tiles to the queue.\n        let draggingTilePosition;\n        if (this._draggingTile) {\n            this._layout.onTileChanged(this._draggingTile);\n            draggingTilePosition = this._dragHandler.layout();\n        }\n\n        // If the container width changed, we need to layout all tiles.\n        if (this._layoutWidth !== this._adapter.container.clientWidth) {\n            this._layoutWidth = this._adapter.container.clientWidth;\n            this._layout.onWidthChanged(this._layoutWidth);\n        }\n\n        // Get layout queue.\n        const changedTiles = this._layout.layout((tile) => this._adapter.getTileLayoutParams(tile));\n\n        // Layout all tiles in queue.\n        for (let tile of changedTiles) {\n            const position = this._layout.getTilePosition(tile);\n            if (tile === this._draggingTile) {\n                Object.assign(position, draggingTilePosition);\n            }\n\n            tile.style.width = `${position.width}px`;\n            tile.style.height = `${position.height}px`;\n            tile.style.transform = `translateX(${position.x}px) translateY(${position.y}px)`;\n        }\n\n        // Update container height.\n        if (this._layoutHeight !== this._layout.height) {\n            this._layoutHeight = this._layout.height;\n            this._adapter.container.style.height = `${this._layoutHeight}px`;\n        }\n\n        requestAnimationFrame(this._update);\n    }\n\n    getTilePosition (tile) {\n        return this._layout && this._layout.getTilePosition(tile);\n    }\n}\n\nexport const layouts = {\n    ColumnLayout,\n    FlowLayout\n};\n\nexport const adapters = {\n    BaseAdapter,\n    FlowAdapter\n};\n"],"names":[],"mappings":"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"}